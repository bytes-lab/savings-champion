---
- name: Add Postgresql repo key
  apt_key: url='https://www.postgresql.org/media/keys/ACCC4CF8.asc' state=present
  sudo: true
  tags:
  - init

- name: Add Postgresql server repo
  apt_repository: repo='deb http://apt.postgresql.org/pub/repos/apt/ trusty-pgdg main' update_cache=yes state=present
  sudo: true
  tags:
  - init

- name: Install Postgres and developmental dependencies
  apt: name={{ item }} state=latest
  sudo: true
  with_items:
  - postgresql
  - postgresql-server-dev-all
  - libpq-dev
  - python-psycopg2
  - repmgr
  - postgresql-9.3-repmgr
  - supervisor

- name: Ensure Postgres has a 9.3 main cluster
  command: pg_createcluster 9.3 main
  ignore_errors: yes
  sudo: true
  sudo_user: postgres

- name: Ensure Postgresql is configured correctly
  template: src=postgresql.conf.j2 dest=/etc/postgresql/9.3/main/postgresql.conf owner=root group=root mode=0644
  notify:
  - restart postgresql
  sudo: true

- name: Ensure Postgresql is configured correctly
  template: src=pg_hba.conf.j2 dest=/etc/postgresql/9.3/main/pg_hba.conf owner=root group=root mode=0644
  notify:
  - restart postgresql
  sudo: true

- name: Ensure Postgresql is started
  service: name=postgresql state=started
  sudo: true

- name: Create replication user
  postgresql_user: name=repmgr password=8%RhWVF6xxsu role_attr_flags=REPLICATION,SUPERUSER
  sudo: true
  sudo_user: postgres
  ignore_errors: yes

- name: Ensure Savings Champion DB Exists
  postgresql_db: name=savings_champion
                 encoding='UTF-8'
                 lc_collate='en_US.UTF-8'
                 lc_ctype='en_US.UTF-8'
                 template='template0'
  sudo: true
  sudo_user: postgres
  ignore_errors: yes

- name: Create savings_champion user
  postgresql_user: name=savings_champion 
                   password='r8Y@Mge#aTtW'
                   role_attr_flags=CREATEDB
                   db=savings_champion
  sudo: true
  sudo_user: postgres
  ignore_errors: yes

- name: Ensure Every DB can communicate via SSH (Add Authorised Key)
  authorized_key: key='ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDJLnMDBoq2sEei8ng9yrCho/AsEg3fZIWves0RPTj06CAJ27SdHb42nsl/fk6f1UAeB1ZB7XUB9n1WqCy0Rb/kZD5d6dD4pGVtmoZJarO93qwpDT5/xfXXjwz4dvfWZx6agb9slNdvezNajjzkDRmKwYpvfFBpPaCtjdsUYgFnI0Aif1SsDTzyKg6B5qEP67xGFKLZ7/B7gI/5CnouUAe13AdJGE65cQp6MdIb4SA80tbtDgjN6efc+YX08Mfv1s6wJmInJxhlC9ysPSrWFUb5mlVC2+REIwDvRtDFd+ppftSwtihNu8vXWj+jY1zZMXoXDb6gSW4pyOV3IRcKNZ0/ josh@Thor' user=postgres
  sudo: true

- name: Ensure every DB can communicate via SSH (Add Private Keyfile)
  copy: src=id_rsa dest=~/.ssh/id_rsa mode=0600
  sudo: true
  sudo_user: postgres

- name: Ensure known_hosts contains other servers
  sshknownhosts: host={{ item }} dest=~/.ssh/known_hosts state=present
  with_items: groups['databases']
  sudo: true
  sudo_user: postgres

- name: Ensure known_hosts contains other servers
  sshknownhosts: host={{ item }} dest=~/.ssh/known_hosts state=present
  with_items: groups['backups']
  sudo: true
  sudo_user: postgres

- name: Ensure Postgresql Tools Are Avaliable
  file: dest=~/.profile state=touch
  sudo: true
  sudo_user: postgres

- name: Ensure Postgresql Tools Are Avaliable
  file: dest=~/.profile state=touch
  sudo: true

- name: Ensure Postgresql Tools Are Avaliable
  lineinfile: dest=~/.profile line="PATH=$PATH:/usr/lib/postgresql/9.3/bin;export PATH"
  sudo: true
  sudo_user: postgres

- name: Ensure Postgresql Tools Are Avaliable
  lineinfile: dest=~/.profile line="PATH=$PATH:/usr/lib/postgresql/9.3/bin;export PATH"
  sudo: true
