# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations
from decimal import Decimal
from django.conf import settings
import django_extensions.db.fields


class Migration(migrations.Migration):

    dependencies = [
        ('common', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AdvantagesBlock',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('type', models.CharField(blank=True, max_length=20, choices=[(b'pro', b'Pro'), (b'con', b'Con')])),
                ('text', models.CharField(max_length=500, blank=True)),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='BestBuy',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('title', models.CharField(max_length=200)),
                ('slug', models.CharField(help_text=b'The slug is a url encoded version of your title and is used to create the web address', max_length=200)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('deleted', models.BooleanField(default=False)),
                ('meta_description', models.CharField(max_length=200, null=True, verbose_name=b'Tables Meta Description', blank=True)),
                ('comparison_meta_description', models.CharField(max_length=200, null=True, verbose_name=b'Comparison Page Meta Description', blank=True)),
                ('description', models.TextField(help_text=b'Please enter a short description describing the Best Buy type', blank=True)),
                ('landing_page_description', models.TextField(help_text=b'Please enter a short description describing the Best Buy type', blank=True)),
                ('order', models.IntegerField(help_text=b'You can affect the ordering of the Best Buys by adding in a number here, we order from smallest to largest.', null=True, blank=True)),
                ('has_table', models.BooleanField(default=False, verbose_name=b'Show best buy table?')),
                ('tips', models.TextField(blank=True)),
                ('is_fixed', models.NullBooleanField(default=False)),
                ('is_bond', models.BooleanField(default=False)),
                ('ratetracker_enabled', models.NullBooleanField(default=False, verbose_name=b'Show on Rate Tracker')),
                ('author', models.ForeignKey(blank=True, to=settings.AUTH_USER_MODEL, help_text=b"The author's name appears as a citation against the description", null=True)),
            ],
            options={
                'ordering': ('order',),
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='FSCSLimitType',
            fields=[
                ('uuid', django_extensions.db.fields.UUIDField(serialize=False, editable=False, primary_key=True, blank=True)),
                ('name', models.TextField()),
                ('balance_limit', models.DecimalField(max_digits=19, decimal_places=3)),
                ('balance_unlimited', models.BooleanField(default=False)),
                ('currency_code', models.TextField()),
                ('multiplier_if_joint', models.DecimalField(default=Decimal('2'), max_digits=19, decimal_places=3)),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='InterestPaidFrequency',
            fields=[
                ('uuid', django_extensions.db.fields.UUIDField(serialize=False, editable=False, primary_key=True, blank=True)),
                ('title', models.TextField(default=b'')),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='MasterProduct',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('title', models.CharField(max_length=200)),
                ('slug', models.CharField(help_text=b'The slug is a url encoded version of your title and is used to create the web address', max_length=200)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('deleted', models.BooleanField(default=False)),
                ('sf_product_id', models.CharField(unique=True, max_length=255)),
                ('status', models.CharField(max_length=20, null=True, blank=True)),
                ('account_type', models.CharField(default=b'P', max_length=1, verbose_name=b'Account Type', choices=[(b'P', b'Personal'), (b'B', b'Business'), (b'C', b'Charity')])),
                ('available_from', models.DateField(null=True, blank=True)),
                ('available_to', models.DateField(null=True, blank=True)),
                ('is_internet_access', models.BooleanField(default=False, verbose_name=b'Internet Access')),
                ('is_phone_access', models.BooleanField(default=False, verbose_name=b'Telephone Access')),
                ('is_post_access', models.BooleanField(default=False, verbose_name=b'Post Access')),
                ('is_branch_access', models.BooleanField(default=False, verbose_name=b'Branch Access')),
                ('is_cc_access', models.BooleanField(default=False, verbose_name=b'Cash Card Access')),
                ('is_open_internet', models.BooleanField(default=False, verbose_name=b'Can it be opened via the internet')),
                ('is_open_telephone', models.BooleanField(default=False, verbose_name=b'Can it be opened via the phone')),
                ('is_open_post', models.BooleanField(default=False, verbose_name=b'Can it be opened through the post')),
                ('is_open_branch', models.BooleanField(default=False, verbose_name=b'Can it be opened through the post')),
                ('is_open_cc', models.BooleanField(default=False, verbose_name=b'Can it be opened via a cash card')),
                ('is_isa_transfers_in', models.BooleanField(default=False, verbose_name=b'Transfer ISAs in')),
                ('is_fixed', models.BooleanField(default=False)),
                ('facts', models.TextField(null=True, blank=True)),
                ('fscs_licence', models.CharField(max_length=200, null=True, blank=True)),
                ('term', models.IntegerField(default=0)),
                ('term_fixed_date', models.DateField(null=True, blank=True)),
                ('notice', models.IntegerField(default=0)),
                ('shariaa', models.BooleanField(default=False)),
                ('existing_only', models.BooleanField(default=False)),
                ('locals_only', models.BooleanField(default=False)),
                ('operating_balance', models.DecimalField(default=0, max_digits=18, decimal_places=10)),
                ('operating_balance_rate', models.DecimalField(default=0, max_digits=18, decimal_places=10)),
                ('other_reason_to_exclude_this_product', models.TextField(default=b'')),
                ('other_reason_compliance_checked', models.BooleanField(default=False)),
                ('trust_funds_accepted', models.BooleanField(default=False)),
                ('minimum_age', models.IntegerField(default=0, null=True, blank=True)),
                ('maximum_age', models.IntegerField(default=0, null=True, blank=True)),
                ('open_limit_total', models.IntegerField(default=-1)),
                ('open_limit_own_name', models.IntegerField(default=-1)),
                ('open_limit_joint_name', models.IntegerField(default=-1)),
                ('bestbuy_type', models.ManyToManyField(to='products.BestBuy', null=True, blank=True)),
                ('interest_paid_frequency', models.ManyToManyField(to='products.InterestPaidFrequency')),
            ],
            options={
                'ordering': ('title',),
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('title', models.CharField(max_length=200)),
                ('slug', models.CharField(help_text=b'The slug is a url encoded version of your title and is used to create the web address', max_length=200)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('deleted', models.BooleanField(default=False)),
                ('sc_code', models.CharField(help_text=b'This is Savings Champion unique identifier for this product', unique=True, max_length=10)),
                ('publish_after', models.DateField(help_text=b'We omit products from searches if there publish date is in the future', null=True, blank=True)),
                ('account_type', models.CharField(default=b'P', max_length=1, verbose_name=b'Account Type', choices=[(b'P', b'Personal'), (b'B', b'Business'), (b'C', b'Charity')])),
                ('minimum', models.IntegerField(default=0, null=True, verbose_name=b'Minimum Deposit', blank=True)),
                ('maximum', models.IntegerField(default=0, null=True, verbose_name=b'Maximum Deposit', blank=True)),
                ('minimum_monthly', models.IntegerField(default=0, null=True, blank=True)),
                ('maximum_monthly', models.IntegerField(default=0, null=True, blank=True)),
                ('aer', models.DecimalField(null=True, max_digits=7, decimal_places=4, blank=True)),
                ('gross_rate', models.DecimalField(null=True, max_digits=7, decimal_places=4, blank=True)),
                ('monthly_gross', models.DecimalField(null=True, max_digits=7, decimal_places=4, blank=True)),
                ('net_20', models.DecimalField(null=True, max_digits=7, decimal_places=4, blank=True)),
                ('net_40', models.DecimalField(null=True, max_digits=7, decimal_places=4, blank=True)),
                ('ratetracker_type', models.CharField(max_length=200, null=True, blank=True)),
                ('is_internet_access', models.BooleanField(default=False, verbose_name=b'Internet Access')),
                ('is_phone_access', models.BooleanField(default=False, verbose_name=b'Telephone Access')),
                ('is_post_access', models.BooleanField(default=False, verbose_name=b'Post Access')),
                ('is_branch_access', models.BooleanField(default=False, verbose_name=b'Branch Access')),
                ('is_cc_access', models.BooleanField(default=False, verbose_name=b'Cash Card Access')),
                ('is_open_internet', models.BooleanField(default=False, verbose_name=b'Can it be opened via the internet')),
                ('is_open_telephone', models.BooleanField(default=False, verbose_name=b'Can it be opened via the phone')),
                ('is_open_post', models.BooleanField(default=False, verbose_name=b'Can it be opened through the post')),
                ('is_open_branch', models.BooleanField(default=False, verbose_name=b'Can it be opened through a branch')),
                ('is_open_cc', models.BooleanField(default=False, verbose_name=b'Cash Card')),
                ('is_isa_transfers_in', models.BooleanField(default=False, verbose_name=b'Transfer ISAs in')),
                ('withdrawals', models.CharField(max_length=1000, null=True, blank=True)),
                ('term', models.IntegerField(default=0)),
                ('facts', models.TextField(default=b'')),
                ('fscs_licence', models.CharField(max_length=1000, null=True, blank=True)),
                ('is_sc_stamp', models.BooleanField(default=False)),
                ('is_paid', models.BooleanField(default=False)),
                ('minimum_age', models.IntegerField(default=0, null=True, blank=True)),
                ('maximum_age', models.IntegerField(default=0, null=True, blank=True)),
                ('bbrating_easyaccess', models.IntegerField(default=0, null=True, verbose_name=b'Easy Access Best Buy Rating', blank=True)),
                ('bbrating_fixedrate_bonds', models.IntegerField(default=0, null=True, verbose_name=b'Fixed Rate Bonds Best Buy Rating', blank=True)),
                ('bbrating_variable_isa', models.IntegerField(default=0, null=True, verbose_name=b'Variable ISA Best Buy Rating', blank=True)),
                ('bbrating_fixed_isa', models.IntegerField(default=0, null=True, verbose_name=b'Fixed ISA Best Buy Rating', blank=True)),
                ('bbrating_notice', models.IntegerField(default=0, null=True, verbose_name=b'Notice Accounts Best Buy Rating', blank=True)),
                ('bbrating_over50', models.IntegerField(default=0, null=True, verbose_name=b'Over 50s Best Buy Rating', blank=True)),
                ('bbrating_monthly_income', models.IntegerField(default=0, null=True, verbose_name=b'Monthly Income Best Buy Rating', blank=True)),
                ('bbrating_regularsavings', models.IntegerField(default=0, null=True, verbose_name=b'Regular Savings Best Buy Rating', blank=True)),
                ('bbrating_childrenssavings', models.IntegerField(default=0, null=True, verbose_name=b'Children Savings Best Buy Rating', blank=True)),
                ('bbrating_variable_bond', models.IntegerField(default=0, null=True, verbose_name=b'Variable Bonds Best Buy Rating', blank=True)),
                ('bbrating_highinterestcurrentaccount', models.IntegerField(default=0, null=True, verbose_name=b'High Interest Current Account Best Buy Rating', blank=True)),
                ('bonus_amount', models.DecimalField(default=0, max_digits=7, decimal_places=4)),
                ('bonus_term', models.IntegerField(default=0)),
                ('bonus_end_date', models.DateField(null=True, blank=True)),
                ('underlying_gross_rate', models.DecimalField(default=0, max_digits=7, decimal_places=4)),
                ('notice', models.IntegerField(default=0, null=True, blank=True)),
                ('url', models.URLField(max_length=300, null=True, blank=True)),
                ('sf_product_id', models.CharField(max_length=255, null=True, blank=True)),
                ('is_fixed', models.BooleanField(default=False)),
                ('verdict', models.TextField(null=True, blank=True)),
                ('bestbuy_type', models.ManyToManyField(related_name='bestbuy_products', null=True, to='products.BestBuy', blank=True)),
                ('master_product', models.ForeignKey(related_name='master_product', blank=True, to='products.MasterProduct', null=True)),
            ],
            options={
                'get_latest_by': 'publish_after',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ProductClickthrough',
            fields=[
                ('uuid', django_extensions.db.fields.UUIDField(serialize=False, editable=False, primary_key=True, blank=True)),
                ('count', models.IntegerField(default=0)),
                ('product', models.ForeignKey(to='products.Product')),
                ('referer', models.ForeignKey(blank=True, to='common.Referrer', null=True)),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ProductPortfolio',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('balance', models.DecimalField(null=True, max_digits=10, decimal_places=2)),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('is_synched', models.NullBooleanField(default=False)),
                ('opening_date', models.DateField(null=True, blank=True)),
                ('bonus_term', models.IntegerField(null=True, blank=True)),
                ('notice', models.IntegerField(null=True, blank=True)),
                ('account_type', models.ForeignKey(to='products.BestBuy')),
                ('product', models.ForeignKey(to='products.Product')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ProductTier',
            fields=[
                ('title', models.CharField(max_length=200)),
                ('slug', models.CharField(help_text=b'The slug is a url encoded version of your title and is used to create the web address', max_length=200)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('deleted', models.BooleanField(default=False)),
                ('uuid', django_extensions.db.fields.UUIDField(serialize=False, editable=False, primary_key=True, blank=True)),
                ('sc_code', models.CharField(help_text=b'This is Savings Champion unique identifier for this product', unique=True, max_length=10)),
                ('publish_after', models.DateField(help_text=b'We omit products from searches if their publish date is in the future', null=True, blank=True)),
                ('available_until', models.DateField(help_text=b"This product tier couldn't be opened past this date.", null=True, blank=True)),
                ('account_type', models.CharField(default=b'P', max_length=1, verbose_name=b'Account Type', choices=[(b'P', b'Personal'), (b'B', b'Business'), (b'C', b'Charity')])),
                ('minimum', models.IntegerField(default=0, null=True, verbose_name=b'Minimum Deposit', blank=True)),
                ('maximum', models.IntegerField(default=0, null=True, verbose_name=b'Maximum Deposit', blank=True)),
                ('minimum_monthly', models.IntegerField(default=0, null=True, blank=True)),
                ('maximum_monthly', models.IntegerField(default=0, null=True, blank=True)),
                ('aer', models.DecimalField(default=0, max_digits=7, decimal_places=4, blank=True)),
                ('gross_rate', models.DecimalField(default=0, max_digits=7, decimal_places=4)),
                ('monthly_gross', models.DecimalField(default=0, max_digits=7, decimal_places=4, blank=True)),
                ('net_20', models.DecimalField(default=0, max_digits=7, decimal_places=4, blank=True)),
                ('net_40', models.DecimalField(default=0, max_digits=7, decimal_places=4, blank=True)),
                ('ratetracker_type', models.TextField(null=True, blank=True)),
                ('is_internet_access', models.BooleanField(default=False, verbose_name=b'Internet Access')),
                ('is_phone_access', models.BooleanField(default=False, verbose_name=b'Telephone Access')),
                ('is_post_access', models.BooleanField(default=False, verbose_name=b'Post Access')),
                ('is_branch_access', models.BooleanField(default=False, verbose_name=b'Branch Access')),
                ('is_cc_access', models.BooleanField(default=False, verbose_name=b'Cash Card Access')),
                ('is_open_internet', models.BooleanField(default=False, verbose_name=b'Can it be opened via the internet')),
                ('is_open_telephone', models.BooleanField(default=False, verbose_name=b'Can it be opened via the phone')),
                ('is_open_post', models.BooleanField(default=False, verbose_name=b'Can it be opened through the post')),
                ('is_open_branch', models.BooleanField(default=False, verbose_name=b'Can it be opened through a branch')),
                ('is_open_cc', models.BooleanField(default=False, verbose_name=b'Cash Card')),
                ('is_isa_transfers_in', models.BooleanField(default=False, verbose_name=b'Transfer ISAs in')),
                ('withdrawals', models.TextField(null=True, blank=True)),
                ('facts', models.TextField(null=True, blank=True)),
                ('fscs_licence', models.TextField(null=True, blank=True)),
                ('is_sc_stamp', models.BooleanField(default=False)),
                ('is_paid', models.BooleanField(default=False)),
                ('bbrating_easyaccess', models.IntegerField(default=0, null=True, verbose_name=b'Easy Access Best Buy Rating', blank=True)),
                ('bbrating_fixedrate_bonds', models.IntegerField(default=0, null=True, verbose_name=b'Fixed Rate Bonds Best Buy Rating', blank=True)),
                ('bbrating_variable_isa', models.IntegerField(default=0, null=True, verbose_name=b'Variable ISA Best Buy Rating', blank=True)),
                ('bbrating_fixed_isa', models.IntegerField(default=0, null=True, verbose_name=b'Fixed ISA Best Buy Rating', blank=True)),
                ('bbrating_notice', models.IntegerField(default=0, null=True, verbose_name=b'Notice Accounts Best Buy Rating', blank=True)),
                ('bbrating_over50', models.IntegerField(default=0, null=True, verbose_name=b'Over 50s Best Buy Rating', blank=True)),
                ('bbrating_monthly_income', models.IntegerField(default=0, null=True, verbose_name=b'Monthly Income Best Buy Rating', blank=True)),
                ('bbrating_regularsavings', models.IntegerField(default=0, null=True, verbose_name=b'Regular Savings Best Buy Rating', blank=True)),
                ('bbrating_childrenssavings', models.IntegerField(default=0, null=True, verbose_name=b'Children Savings Best Buy Rating', blank=True)),
                ('bbrating_variable_bond', models.IntegerField(default=0, null=True, verbose_name=b'Variable Bonds Best Buy Rating', blank=True)),
                ('bbrating_highinterestcurrentaccount', models.IntegerField(default=0, null=True, verbose_name=b'High Interest Current Account Best Buy Rating', blank=True)),
                ('status', models.CharField(max_length=20, null=True, blank=True)),
                ('bonus_amount', models.DecimalField(null=True, max_digits=7, decimal_places=4, blank=True)),
                ('bonus_term', models.IntegerField(null=True, blank=True)),
                ('bonus_end_date', models.DateField(null=True, blank=True)),
                ('underlying_gross_rate', models.DecimalField(null=True, max_digits=7, decimal_places=4, blank=True)),
                ('url', models.URLField(max_length=300, null=True, blank=True)),
                ('sf_product_tier_id', models.CharField(unique=True, max_length=255)),
                ('is_fixed', models.BooleanField(default=False)),
                ('verdict', models.TextField(null=True, blank=True)),
                ('joint_account_only', models.BooleanField(default=False)),
                ('tier_type', models.TextField(default=b'', blank=True)),
                ('product', models.ForeignKey(blank=True, to='products.MasterProduct', null=True)),
            ],
            options={
                'get_latest_by': 'publish_after',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Provider',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('title', models.CharField(unique=True, max_length=200)),
                ('slug', models.CharField(help_text=b'The slug is a url encoded version of your title and is used to create the web address', max_length=200)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('deleted', models.BooleanField(default=False)),
                ('logo', models.ImageField(help_text=b'The logo will appear alongside the product information on the best buy tables', upload_to=b'logos')),
                ('fscs_parent', models.CharField(help_text=b'Please enter this all as one word, for example: RoyalBankOfScotland', max_length=255, null=True, blank=True)),
                ('fscs_licence_holder', models.TextField(null=True)),
                ('ethical', models.BooleanField(default=False)),
                ('ethical_rating', models.TextField(default=b'', null=True, blank=True)),
                ('moodys_rating', models.CharField(blank=True, max_length=4, null=True, choices=[(None, b'None'), (b'A1', b'Obligations rated A are considered upper-medium grade and are subject to low credit risk'), (b'A2', b'Obligations rated A are considered upper-medium grade and are subject to low credit risk'), (b'A3', b'Obligations rated A are considered upper-medium grade and are subject to low credit risk'), (b'Aa1', b'Obligations rated Aa are judged to be of high quality and are subject to very low credit risk'), (b'Aa2', b'Obligations rated Aa are judged to be of high quality and are subject to very low credit risk'), (b'Aa3', b'Obligations rated Aa are judged to be of high quality and are subject to very low credit risk'), (b'Aaa1', b'Obligations rated Aaa are judged to be of the highest quality, with minimal credit risk.'), (b'Aaa2', b'Obligations rated Aaa are judged to be of the highest quality, with minimal credit risk.'), (b'Aaa3', b'Obligations rated Aaa are judged to be of the highest quality, with minimal credit risk.'), (b'B1', b'Obligations rated B are considered speculative and are subject to high credit risk.'), (b'B2', b'Obligations rated B are considered speculative and are subject to high credit risk.'), (b'B3', b'Obligations rated B are considered speculative and are subject to high credit risk.'), (b'Ba1', b'Obligations rated Ba are judged to have speculative elements and are subject to substantial credit risk.'), (b'Ba2', b'Obligations rated Ba are judged to have speculative elements and are subject to substantial credit risk.'), (b'Ba3', b'Obligations rated Ba are judged to have speculative elements and are subject to substantial credit risk.'), (b'Baa1', b'Obligations rated Baa are subject to moderate credit risk. They are considered medium-grade and as such may possess certain speculative characteristics.'), (b'Baa2', b'Obligations rated Baa are subject to moderate credit risk. They are considered medium-grade and as such may possess certain speculative characteristics.'), (b'Baa3', b'Obligations rated Baa are subject to moderate credit risk. They are considered medium-grade and as such may possess certain speculative characteristics.'), (b'C1', b'Obligations rated C are the lowest rated class of bonds and are typically in default, with little prospect for recovery of principal or interest.'), (b'C2', b'Obligations rated C are the lowest rated class of bonds and are typically in default, with little prospect for recovery of principal or interest.'), (b'C3', b'Obligations rated C are the lowest rated class of bonds and are typically in default, with little prospect for recovery of principal or interest.'), (b'Ca1', b'Obligations rated Ca are highly speculative and are likely in, or very near, default, with some prospect of recovery of principal and interest.'), (b'Ca2', b'Obligations rated Ca are highly speculative and are likely in, or very near, default, with some prospect of recovery of principal and interest.'), (b'Ca3', b'Obligations rated Ca are highly speculative and are likely in, or very near, default, with some prospect of recovery of principal and interest.'), (b'Caa1', b'Obligations rated Caa are judged to be of poor standing and are subject to very high credit risk.'), (b'Caa2', b'Obligations rated Caa are judged to be of poor standing and are subject to very high credit risk.'), (b'Caa3', b'Obligations rated Caa are judged to be of poor standing and are subject to very high credit risk.')])),
                ('fitchs_rating', models.CharField(default=0, max_length=4, null=True, blank=True, choices=[(0, b'None'), (b'A+', b'A+'), (b'A', b'A'), (b'B', b'B'), (b'C', b'C')])),
                ('building_society', models.BooleanField(default=False)),
                ('mutual', models.BooleanField(default=False)),
                ('bank', models.BooleanField(default=False)),
                ('high_street', models.BooleanField(default=False)),
                ('phone', models.TextField(default=b'', null=True, blank=True)),
                ('website', models.URLField(default=b'', null=True, blank=True)),
                ('meets_service_standard', models.BooleanField(default=True)),
                ('reason_to_exclude', models.TextField(default=b'', null=True, blank=True)),
                ('compliance_checked', models.BooleanField(default=False)),
                ('sf_provider_id', models.TextField(unique=True, null=True)),
                ('isa_topup_2014', models.BooleanField(default=False)),
                ('isa_topup_2014_conditions', models.TextField(default=b'', blank=True)),
                ('isa_topup_2014_email_list', models.TextField(default=b'', blank=True)),
                ('provider_maximum', models.DecimalField(default=0, max_digits=18, decimal_places=2)),
                ('fscs_limit_type', models.ForeignKey(to='products.FSCSLimitType', null=True)),
            ],
            options={
                'ordering': ('title',),
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ProviderBestBuy',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('bestbuys', models.ManyToManyField(to='products.BestBuy')),
                ('provider', models.ForeignKey(to='products.Provider')),
            ],
            options={
                'ordering': ('provider__title',),
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ProviderContacts',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('first_name', models.TextField(default=b'')),
                ('last_name', models.TextField(default=b'')),
                ('title', models.TextField(default=b'')),
                ('email', models.EmailField(default=b'', max_length=75)),
                ('office_phone', models.TextField(default=b'')),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ProviderSpecificFields',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('field_name', models.TextField(default=b'')),
                ('provider', models.ForeignKey(to='products.Provider')),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Ranking',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('rank', models.IntegerField(null=True, blank=True)),
                ('hidden', models.BooleanField(default=False)),
                ('bestbuy', models.ForeignKey(to='products.BestBuy')),
                ('product', models.ForeignKey(related_name='link_to_products', to='products.Product')),
            ],
            options={
                'ordering': ('bestbuy__title', 'rank'),
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='RatetrackerReminder',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('balance', models.DecimalField(null=True, max_digits=10, decimal_places=2)),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('is_synched', models.NullBooleanField(default=False)),
                ('maturity_date', models.DateField()),
                ('rate', models.DecimalField(default=0, max_digits=18, decimal_places=4)),
                ('fee_exempt', models.BooleanField(default=True)),
                ('term', models.IntegerField(default=0)),
                ('pool_altered', models.BooleanField(default=False)),
                ('account_type', models.ForeignKey(to='products.BestBuy')),
                ('provider', models.ForeignKey(to='products.Provider')),
                ('user', models.ForeignKey(to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='TrustTypes',
            fields=[
                ('uuid', django_extensions.db.fields.UUIDField(serialize=False, editable=False, primary_key=True, blank=True)),
                ('title', models.TextField(default=b'')),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='WeeklyRateAlert',
            fields=[
                ('uuid', django_extensions.db.fields.UUIDField(serialize=False, editable=False, primary_key=True, blank=True)),
                ('email', models.EmailField(max_length=75)),
                ('signup_date', models.DateTimeField(auto_now_add=True)),
                ('frequency', models.IntegerField(default=2, choices=[(2, b'Deliver Weekly'), (3, b'Deliver Monthly')])),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.AddField(
            model_name='producttier',
            name='provider',
            field=models.ForeignKey(related_name='product_tiers', to='products.Provider'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='productportfolio',
            name='provider',
            field=models.ForeignKey(to='products.Provider'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='productportfolio',
            name='user',
            field=models.ForeignKey(to=settings.AUTH_USER_MODEL),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='product',
            name='provider',
            field=models.ForeignKey(related_name='products', to='products.Provider'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='product',
            name='user',
            field=models.ManyToManyField(related_name='portfolio_products', through='products.ProductPortfolio', to=settings.AUTH_USER_MODEL),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='masterproduct',
            name='provider',
            field=models.ForeignKey(related_name='master_products', blank=True, to='products.Provider', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='masterproduct',
            name='trust_types_excluded',
            field=models.ManyToManyField(to='products.TrustTypes'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='bestbuy',
            name='products',
            field=models.ManyToManyField(to='products.Product', through='products.Ranking'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='advantagesblock',
            name='bestbuy',
            field=models.ForeignKey(to='products.BestBuy'),
            preserve_default=True,
        ),
    ]
