{"version":3,"sources":["concierge/jquery.formset.coffee"],"names":[],"mappings":";AAAA;;;;;;;;;;;;AAAA;EAWA,CAAC,SAAC,CAAD;IACC,CAAC,CAAC,EAAE,CAAC,OAAL,GAAe,SAAC,IAAD;AACb,UAAA;MAAA,EAAA,GAAK,CAAA,CAAE,IAAF;MACL,OAAA,GAAU,CAAC,CAAC,MAAF,CAAS,EAAT,EAAa,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,QAA1B,EAAoC,IAApC;aACV,EAAE,CAAC,IAAH,CAAQ,SAAC,CAAD;AACN,YAAA;QAAA,gBAAA,GAAmB,OAAO,CAAC,YAAY,CAAC,IAArB,CAA0B,GAA1B;QACnB,UAAA,GAAa,CAAA,CAAE,MAAA,GAAS,OAAO,CAAC,MAAjB,GAA0B,cAA5B;QACb,QAAA,GAAW,CAAA,CAAE,MAAA,GAAS,OAAO,CAAC,MAAjB,GAA0B,gBAA5B;QACX,oBAAA,GAAuB;QAEvB,iBAAA,GAAoB,SAAC,GAAD,EAAM,GAAN;UAClB,IAAG,OAAO,CAAC,YAAX;YACE,GAAG,CAAC,WAAJ,CAAgB,gBAAhB;YACA,GAAG,CAAC,QAAJ,CAAa,OAAO,CAAC,YAAa,CAAA,GAAA,GAAM,OAAO,CAAC,YAAY,CAAC,MAA3B,CAAlC,EAFF;;QADkB;QAMpB,kBAAA,GAAqB,SAAC,IAAD,EAAO,MAAP,EAAe,GAAf;AACnB,cAAA;UAAA,OAAA,GAAc,IAAA,MAAA,CAAO,MAAA,GAAS,qBAAhB;UACd,WAAA,GAAc,MAAA,GAAS,GAAT,GAAe,GAAf,GAAqB;UACnC,IAAoE,IAAI,CAAC,IAAL,CAAU,KAAV,CAApE;YAAA,IAAI,CAAC,IAAL,CAAU,KAAV,EAAiB,IAAI,CAAC,IAAL,CAAU,KAAV,CAAgB,CAAC,OAAjB,CAAyB,OAAzB,EAAkC,WAAlC,CAAjB,EAAA;;UACA,IAAkE,IAAI,CAAC,IAAL,CAAU,IAAV,CAAlE;YAAA,IAAI,CAAC,IAAL,CAAU,IAAV,EAAgB,IAAI,CAAC,IAAL,CAAU,IAAV,CAAe,CAAC,OAAhB,CAAwB,OAAxB,EAAiC,WAAjC,CAAhB,EAAA;;UACA,IAAsE,IAAI,CAAC,IAAL,CAAU,MAAV,CAAtE;YAAA,IAAI,CAAC,IAAL,CAAU,MAAV,EAAkB,IAAI,CAAC,IAAL,CAAU,MAAV,CAAiB,CAAC,OAAlB,CAA0B,OAA1B,EAAmC,WAAnC,CAAlB,EAAA;;QALmB;QAQrB,gBAAA,GAAmB,SAAC,GAAD;iBACjB,GAAG,CAAC,IAAJ,CAAS,oBAAT,CAA8B,CAAC,MAA/B,GAAwC;QADvB;QAGnB,aAAA,GAAgB,SAAA;iBAEd,QAAQ,CAAC,MAAT,KAAmB,CAAnB,IAAwB,CAAC,QAAQ,CAAC,GAAT,CAAA,CAAA,KAAkB,EAAlB,IAAwB,CAAC,QAAQ,CAAC,GAAT,CAAA,CAAA,GAAiB,UAAU,CAAC,GAAX,CAAA,CAAjB,GAAoC,CAArC,CAAzB;QAFV;QAIhB,gBAAA,GAAmB,SAAC,GAAD;AACjB,cAAA;UAAA,cAAA,GAAiB,OAAO,CAAC,cAAc,CAAC,IAAvB,CAAA,CAA6B,CAAC,OAA9B,CAAsC,MAAtC,EAA8C,GAA9C;UACjB,cAAA,GAAiB,OAAO,CAAC,WAAW,CAAC,IAApB,CAAA,CAA0B,CAAC,OAA3B,CAAmC,MAAnC,EAA2C,GAA3C;UACjB,IAAG,GAAG,CAAC,EAAJ,CAAO,IAAP,CAAH;YAIE,GAAG,CAAC,QAAJ,CAAa,OAAb,CAAqB,CAAC,MAAtB,CAA6B,aAAA,GAAgB,OAAO,CAAC,cAAxB,GAAyC,iCAAzC,GAA6E,OAAO,CAAC,UAArF,GAAkG,MAA/H,EAJF;WAAA,MAKK,IAAG,GAAG,CAAC,EAAJ,CAAO,IAAP,CAAA,IAAgB,GAAG,CAAC,EAAJ,CAAO,IAAP,CAAnB;YAIH,GAAG,CAAC,MAAJ,CAAW,iBAAA,GAAoB,OAAO,CAAC,cAA5B,GAA6C,iCAA7C,GAAiF,OAAO,CAAC,UAAzF,GAAsG,WAAjH,EAJG;WAAA,MAAA;YASH,GAAG,CAAC,MAAJ,CAAW,aAAA,GAAgB,OAAO,CAAC,cAAxB,GAAyC,iCAAzC,GAA6E,OAAO,CAAC,UAArF,GAAkG,MAA7G,EATG;;UAUL,GAAG,CAAC,IAAJ,CAAS,IAAA,GAAO,cAAhB,CAA+B,CAAC,KAAhC,CAAsC,SAAA;AACpC,gBAAA;YAAA,GAAA,GAAM,CAAA,CAAE,IAAF,CAAO,CAAC,OAAR,CAAgB,GAAA,GAAM,OAAO,CAAC,YAA9B;YACN,GAAA,GAAM,GAAG,CAAC,IAAJ,CAAS,iCAAT;YACN,SAAA,GAAY,GAAG,CAAC,QAAJ,CAAa,IAAA,GAAO,cAAP,GAAwB,KAAxB,GAAgC,OAAO,CAAC,YAAxC,GAAuD,MAApE;YACZ,KAAA,GAAQ;YACR,IAAG,GAAG,CAAC,MAAP;cAKE,GAAG,CAAC,GAAJ,CAAQ,IAAR;cACA,GAAG,CAAC,IAAJ,CAAA;cACA,KAAA,GAAQ,CAAA,CAAE,GAAA,GAAM,OAAO,CAAC,YAAhB,CAA6B,CAAC,GAA9B,CAAkC,SAAlC,EAPV;aAAA,MAAA;cASE,GAAG,CAAC,MAAJ,CAAA;cAGA,KAAA,GAAQ,CAAA,CAAE,GAAA,GAAM,OAAO,CAAC,YAAhB,CAA6B,CAAC,GAA9B,CAAkC,0BAAlC;cACR,UAAU,CAAC,GAAX,CAAe,KAAK,CAAC,MAArB,EAbF;;YAcA,CAAA,GAAI;YACJ,SAAA,GAAY,KAAK,CAAC;AAElB,mBAAM,CAAA,GAAI,SAAV;cAGE,iBAAA,CAAkB,KAAK,CAAC,EAAN,CAAS,CAAT,CAAlB,EAA+B,CAA/B;cACA,IAAA,CAAO,GAAG,CAAC,MAAX;gBAIE,KAAK,CAAC,EAAN,CAAS,CAAT,CAAW,CAAC,IAAZ,CAAiB,oBAAjB,CAAsC,CAAC,IAAvC,CAA4C,SAAA;kBAC1C,kBAAA,CAAmB,CAAA,CAAE,IAAF,CAAnB,EAA4B,OAAO,CAAC,MAApC,EAA4C,CAA5C;gBAD0C,CAA5C,EAJF;;cAQA,CAAA;YAZF;YAeA,IAAqB,SAAS,CAAC,EAAV,CAAa,SAAb,CAAA,IAA4B,aAAA,CAAA,CAAjD;cAAA,SAAS,CAAC,IAAV,CAAA,EAAA;;YAGA,IAAwB,OAAO,CAAC,OAAhC;cAAA,OAAO,CAAC,OAAR,CAAgB,GAAhB,EAAA;;mBACA;UAzCoC,CAAtC;QAlBiB;QA+DnB,GAAA,GAAM,CAAA,CAAE,IAAF;QACN,GAAA,GAAM,GAAG,CAAC,IAAJ,CAAS,mCAAT;QACN,IAAG,GAAG,CAAC,MAAP;UAKE,IAAG,GAAG,CAAC,EAAJ,CAAO,UAAP,CAAH;YAIE,GAAG,CAAC,MAAJ,CAAW,gCAAA,GAAmC,GAAG,CAAC,IAAJ,CAAS,MAAT,CAAnC,GAAsD,UAAtD,GAAmE,GAAG,CAAC,IAAJ,CAAS,IAAT,CAAnE,GAAoF,oBAA/F;YACA,GAAG,CAAC,IAAJ,CAAA,EALF;WAAA,MAAA;YAOE,GAAG,CAAC,MAAJ,CAAW,gCAAA,GAAmC,GAAG,CAAC,IAAJ,CAAS,MAAT,CAAnC,GAAsD,UAAtD,GAAmE,GAAG,CAAC,IAAJ,CAAS,IAAT,CAAnE,GAAoF,OAA/F,EAPF;;UAUA,CAAA,CAAE,cAAA,GAAiB,GAAG,CAAC,IAAJ,CAAS,IAAT,CAAjB,GAAkC,KAApC,CAA0C,CAAC,IAA3C,CAAA;UACA,GAAG,CAAC,MAAJ,CAAA,EAhBF;;QAiBA,IAAG,gBAAA,CAAiB,GAAjB,CAAH;UACE,GAAG,CAAC,QAAJ,CAAa,OAAO,CAAC,YAArB;UACA,IAAG,GAAG,CAAC,EAAJ,CAAO,UAAP,CAAH;YACE,gBAAA,CAAiB,GAAjB;YACA,iBAAA,CAAkB,GAAlB,EAAuB,CAAvB,EAFF;WAFF;;QAKA,IAAG,EAAE,CAAC,MAAN;UACE,aAAA,GAAgB,CAAI,aAAA,CAAA;UACpB,IAAG,OAAO,CAAC,YAAX;YAGE,QAAA,GAAW,CAAK,OAAO,CAAC,YAAR,YAAgC,CAApC,GAA4C,OAAO,CAAC,YAApD,GAAsE,CAAA,CAAE,OAAO,CAAC,YAAV,CAAvE;YACX,QAAQ,CAAC,UAAT,CAAoB,IAApB,CAAyB,CAAC,QAA1B,CAAmC,OAAO,CAAC,YAAR,GAAuB,0BAA1D;YACA,QAAQ,CAAC,IAAT,CAAc,oBAAd,CAAmC,CAAC,IAApC,CAAyC,SAAA;cACvC,kBAAA,CAAmB,CAAA,CAAE,IAAF,CAAnB,EAA4B,OAAO,CAAC,MAApC,EAA4C,YAA5C;YADuC,CAAzC;YAIA,gBAAA,CAAiB,QAAjB,EATF;WAAA,MAAA;YAcE,QAAA,GAAW,CAAA,CAAE,GAAA,GAAM,OAAO,CAAC,YAAd,GAA6B,OAA/B,CAAuC,CAAC,KAAxC,CAA8C,IAA9C,CAAmD,CAAC,UAApD,CAA+D,IAA/D;YACX,QAAQ,CAAC,IAAT,CAAc,iCAAd,CAAgD,CAAC,MAAjD,CAAA;YAGA,QAAQ,CAAC,IAAT,CAAc,oBAAd,CAAmC,CAAC,GAApC,CAAwC,OAAO,CAAC,eAAhD,CAAgE,CAAC,IAAjE,CAAsE,SAAA;AACpE,kBAAA;cAAA,IAAA,GAAO,CAAA,CAAE,IAAF;cAIP,IAAG,IAAI,CAAC,EAAL,CAAQ,gBAAR,CAAA,IAA6B,IAAI,CAAC,EAAL,CAAQ,aAAR,CAAhC;gBACE,IAAI,CAAC,IAAL,CAAU,SAAV,EAAqB,KAArB,EADF;eAAA,MAAA;gBAGE,IAAI,CAAC,GAAL,CAAS,EAAT,EAHF;;YALoE,CAAtE,EAlBF;;UA+BA,OAAO,CAAC,YAAR,GAAuB;UACvB,IAAG,EAAE,CAAC,EAAH,CAAM,IAAN,CAAH;YAIE,OAAA,GAAU,EAAE,CAAC,EAAH,CAAM,CAAN,CAAQ,CAAC,QAAT,CAAA,CAAmB,CAAC;YAC9B,SAAA,GAAY,CAAA,CAAE,oBAAA,GAAuB,OAAvB,GAAiC,gBAAjC,GAAoD,OAAO,CAAC,WAA5D,GAA0E,iCAA1E,GAA8G,OAAO,CAAC,OAAtH,GAAgI,WAAlI,CAA8I,CAAC,QAA/I,CAAwJ,OAAO,CAAC,YAAR,GAAuB,MAA/K;YACZ,EAAE,CAAC,MAAH,CAAA,CAAW,CAAC,MAAZ,CAAmB,SAAnB;YACA,IAAqB,aAArB;cAAA,SAAS,CAAC,IAAV,CAAA,EAAA;;YACA,SAAA,GAAY,SAAS,CAAC,IAAV,CAAe,GAAf,EARd;WAAA,MAAA;YAYE,EAAE,CAAC,MAAH,CAAU,OAAV,CAAkB,CAAC,KAAnB,CAAyB,aAAA,GAAgB,OAAO,CAAC,WAAxB,GAAsC,iCAAtC,GAA0E,OAAO,CAAC,OAAlF,GAA4F,MAArH;YACA,SAAA,GAAY,EAAE,CAAC,MAAH,CAAU,OAAV,CAAkB,CAAC,IAAnB,CAAA;YACZ,IAAqB,aAArB;cAAA,SAAS,CAAC,IAAV,CAAA,EAAA;aAdF;;UAeA,SAAS,CAAC,KAAV,CAAgB,SAAA;AACd,gBAAA;YAAA,SAAA,GAAY,QAAA,CAAS,UAAU,CAAC,GAAX,CAAA,CAAT;YACZ,GAAA,GAAM,OAAO,CAAC,YAAY,CAAC,KAArB,CAA2B,IAA3B,CAAgC,CAAC,WAAjC,CAA6C,yBAA7C;YACN,SAAA,GAAY,CAAA,CAAE,CAAA,CAAE,IAAF,CAAO,CAAC,OAAR,CAAgB,KAAA,GAAQ,OAAO,CAAC,YAAhB,GAA+B,MAA/C,CAAsD,CAAC,GAAvD,CAA2D,CAA3D,CAAA,IAAiE,IAAnE;YACZ,iBAAA,CAAkB,GAAlB,EAAuB,SAAvB;YACA,GAAG,CAAC,YAAJ,CAAiB,SAAjB,CAA2B,CAAC,IAA5B,CAAA;YACA,GAAG,CAAC,IAAJ,CAAS,oBAAT,CAA8B,CAAC,IAA/B,CAAoC,SAAA;cAClC,kBAAA,CAAmB,CAAA,CAAE,IAAF,CAAnB,EAA4B,OAAO,CAAC,MAApC,EAA4C,SAA5C;YADkC,CAApC;YAIA,UAAU,CAAC,GAAX,CAAe,SAAA,GAAY,CAA3B;YAGA,IAAA,CAAyB,aAAA,CAAA,CAAzB;cAAA,SAAS,CAAC,IAAV,CAAA,EAAA;;YAGA,IAAsB,OAAO,CAAC,KAA9B;cAAA,OAAO,CAAC,KAAR,CAAc,GAAd,EAAA;;mBACA;UAjBc,CAAhB,EAjDF;;MAlHM,CAAR;IAHa;IA8Lf,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,QAAb,GACE;MAAA,MAAA,EAAQ,MAAR;MACA,YAAA,EAAc,IADd;MAEA,OAAA,EAAS,aAFT;MAGA,UAAA,EAAY,QAHZ;MAIA,WAAA,EAAa,SAJb;MAKA,cAAA,EAAgB,YALhB;MAMA,YAAA,EAAc,cANd;MAOA,YAAA,EAAc,EAPd;MAQA,eAAA,EAAiB,EARjB;MASA,KAAA,EAAO,IATP;MAUA,OAAA,EAAS,IAVT;;EAhMH,CAAD,CAAA,CA6ME,MA7MF;AAXA","file":"concierge/jquery.formset.js","sourceRoot":"/source/","sourcesContent":["###*\njQuery Formset 1.3-pre\n@author Stanislaus Madueke (stan DOT madueke AT gmail DOT com)\n@requires jQuery 1.2.6 or later\n\nCopyright (c) 2009, Stanislaus Madueke\nAll rights reserved.\n\nLicensed under the New BSD License\nSee: http://www.opensource.org/licenses/bsd-license.php\n###\n(($) ->\n  $.fn.formset = (opts) ->\n    $$ = $(this)\n    options = $.extend({}, $.fn.formset.defaults, opts)\n    $$.each (i) ->\n      flatExtraClasses = options.extraClasses.join(\" \")\n      totalForms = $(\"#id_\" + options.prefix + \"-TOTAL_FORMS\")\n      maxForms = $(\"#id_\" + options.prefix + \"-MAX_NUM_FORMS\")\n      childElementSelector = \"input,select,textarea,label,div\"\n\n      applyExtraClasses = (row, ndx) ->\n        if options.extraClasses\n          row.removeClass flatExtraClasses\n          row.addClass options.extraClasses[ndx % options.extraClasses.length]\n        return\n\n      updateElementIndex = (elem, prefix, ndx) ->\n        idRegex = new RegExp(prefix + \"-(\\\\d+|__prefix__)-\")\n        replacement = prefix + \"-\" + ndx + \"-\"\n        elem.attr \"for\", elem.attr(\"for\").replace(idRegex, replacement)  if elem.attr(\"for\")\n        elem.attr \"id\", elem.attr(\"id\").replace(idRegex, replacement)  if elem.attr(\"id\")\n        elem.attr \"name\", elem.attr(\"name\").replace(idRegex, replacement)  if elem.attr(\"name\")\n        return\n\n      hasChildElements = (row) ->\n        row.find(childElementSelector).length > 0\n\n      showAddButton = ->\n        # For Django versions pre 1.2\n        maxForms.length is 0 or (maxForms.val() is \"\" or (maxForms.val() - totalForms.val() > 0))\n\n      insertDeleteLink = (row) ->\n        delCssSelector = options.deleteCssClass.trim().replace(/\\s+/g, \".\")\n        addCssSelector = options.addCssClass.trim().replace(/\\s+/g, \".\")\n        if row.is(\"TR\")\n          \n          # If the forms are laid out in table rows, insert\n          # the remove button into the last table cell:\n          row.children(\":last\").append \"<a class=\\\"\" + options.deleteCssClass + \"\\\" href=\\\"javascript:void(0)\\\">\" + options.deleteText + \"</a>\"\n        else if row.is(\"UL\") or row.is(\"OL\")\n          \n          # If they're laid out as an ordered/unordered list,\n          # insert an <li> after the last list item:\n          row.append \"<li><a class=\\\"\" + options.deleteCssClass + \"\\\" href=\\\"javascript:void(0)\\\">\" + options.deleteText + \"</a></li>\"\n        else\n          \n          # Otherwise, just insert the remove button as the\n          # last child element of the form's container:\n          row.append \"<a class=\\\"\" + options.deleteCssClass + \"\\\" href=\\\"javascript:void(0)\\\">\" + options.deleteText + \"</a>\"\n        row.find(\"a.\" + delCssSelector).click ->\n          row = $(this).parents(\".\" + options.formCssClass)\n          del = row.find(\"input:hidden[id $= \\\"-DELETE\\\"]\")\n          buttonRow = row.siblings(\"a.\" + addCssSelector + \", .\" + options.formCssClass + \"-add\")\n          forms = undefined\n          if del.length\n            \n            # We're dealing with an inline formset.\n            # Rather than remove this form from the DOM, we'll mark it as deleted\n            # and hide it, then let Django handle the deleting:\n            del.val \"on\"\n            row.hide()\n            forms = $(\".\" + options.formCssClass).not(\":hidden\")\n          else\n            row.remove()\n            \n            # Update the TOTAL_FORMS count:\n            forms = $(\".\" + options.formCssClass).not(\".formset-custom-template\")\n            totalForms.val forms.length\n          i = 0\n          formCount = forms.length\n\n          while i < formCount\n            \n            # Apply `extraClasses` to form rows so they're nicely alternating:\n            applyExtraClasses forms.eq(i), i\n            unless del.length\n              \n              # Also update names and IDs for all child controls (if this isn't\n              # a delete-able inline formset) so they remain in sequence:\n              forms.eq(i).find(childElementSelector).each ->\n                updateElementIndex $(this), options.prefix, i\n                return\n\n            i++\n          \n          # Check if we need to show the add button:\n          buttonRow.show()  if buttonRow.is(\":hidden\") and showAddButton()\n          \n          # If a post-delete callback was provided, call it with the deleted form:\n          options.removed row  if options.removed\n          false\n\n        return\n\n      row = $(this)\n      del = row.find(\"input:checkbox[id $= \\\"-DELETE\\\"]\")\n      if del.length\n        \n        # If you specify \"can_delete = True\" when creating an inline formset,\n        # Django adds a checkbox to each form in the formset.\n        # Replace the default checkbox with a hidden field:\n        if del.is(\":checked\")\n          \n          # If an inline formset containing deleted forms fails validation, make sure\n          # we keep the forms hidden (thanks for the bug report and suggested fix Mike)\n          del.before \"<input type=\\\"hidden\\\" name=\\\"\" + del.attr(\"name\") + \"\\\" id=\\\"\" + del.attr(\"id\") + \"\\\" value=\\\"on\\\" />\"\n          row.hide()\n        else\n          del.before \"<input type=\\\"hidden\\\" name=\\\"\" + del.attr(\"name\") + \"\\\" id=\\\"\" + del.attr(\"id\") + \"\\\" />\"\n        \n        # Hide any labels associated with the DELETE checkbox:\n        $(\"label[for=\\\"\" + del.attr(\"id\") + \"\\\"]\").hide()\n        del.remove()\n      if hasChildElements(row)\n        row.addClass options.formCssClass\n        if row.is(\":visible\")\n          insertDeleteLink row\n          applyExtraClasses row, i\n      if $$.length\n        hideAddButton = not showAddButton()\n        if options.formTemplate\n          \n          # If a form template was specified, we'll clone it to generate new form instances:\n          template = (if (options.formTemplate instanceof $) then options.formTemplate else $(options.formTemplate))\n          template.removeAttr(\"id\").addClass options.formCssClass + \" formset-custom-template\"\n          template.find(childElementSelector).each ->\n            updateElementIndex $(this), options.prefix, \"__prefix__\"\n            return\n\n          insertDeleteLink template\n        else\n          \n          # Otherwise, use the last form in the formset; this works much better if you've got\n          # extra (>= 1) forms (thnaks to justhamade for pointing this out):\n          template = $(\".\" + options.formCssClass + \":last\").clone(true).removeAttr(\"id\")\n          template.find(\"input:hidden[id $= \\\"-DELETE\\\"]\").remove()\n          \n          # Clear all cloned fields, except those the user wants to keep (thanks to brunogola for the suggestion):\n          template.find(childElementSelector).not(options.keepFieldValues).each ->\n            elem = $(this)\n            \n            # If this is a checkbox or radiobutton, uncheck it.\n            # This fixes Issue 1, reported by Wilson.Andrew.J:\n            if elem.is(\"input:checkbox\") or elem.is(\"input:radio\")\n              elem.attr \"checked\", false\n            else\n              elem.val \"\"\n            return\n\n        \n        # FIXME: Perhaps using $.data would be a better idea?\n        options.formTemplate = template\n        if $$.is(\"TR\")\n          \n          # If forms are laid out as table rows, insert the\n          # \"add\" button in a new table row:\n          numCols = $$.eq(0).children().length # This is a bit of an assumption :|\n          buttonRow = $(\"<tr><td colspan=\\\"\" + numCols + \"\\\"><a class=\\\"\" + options.addCssClass + \"\\\" href=\\\"javascript:void(0)\\\">\" + options.addText + \"</a></tr>\").addClass(options.formCssClass + \"-add\")\n          $$.parent().append buttonRow\n          buttonRow.hide()  if hideAddButton\n          addButton = buttonRow.find(\"a\")\n        else\n          \n          # Otherwise, insert it immediately after the last form:\n          $$.filter(\":last\").after \"<a class=\\\"\" + options.addCssClass + \"\\\" href=\\\"javascript:void(0)\\\">\" + options.addText + \"</a>\"\n          addButton = $$.filter(\":last\").next()\n          addButton.hide()  if hideAddButton\n        addButton.click ->\n          formCount = parseInt(totalForms.val())\n          row = options.formTemplate.clone(true).removeClass(\"formset-custom-template\")\n          buttonRow = $($(this).parents(\"tr.\" + options.formCssClass + \"-add\").get(0) or this)\n          applyExtraClasses row, formCount\n          row.insertBefore(buttonRow).show()\n          row.find(childElementSelector).each ->\n            updateElementIndex $(this), options.prefix, formCount\n            return\n\n          totalForms.val formCount + 1\n          \n          # Check if we've exceeded the maximum allowed number of forms:\n          buttonRow.hide()  unless showAddButton()\n          \n          # If a post-add callback was supplied, call it with the added form:\n          options.added row  if options.added\n          false\n\n      return\n\n\n  \n  # Setup plugin defaults \n  $.fn.formset.defaults =\n    prefix: \"form\" # The form prefix for your django formset\n    formTemplate: null # The jQuery selection cloned to generate new form instances\n    addText: \"add another\" # Text for the add link\n    deleteText: \"remove\" # Text for the delete link\n    addCssClass: \"add-row\" # CSS class applied to the add link\n    deleteCssClass: \"delete-row\" # CSS class applied to the delete link\n    formCssClass: \"dynamic-form\" # CSS class applied to each form in a formset\n    extraClasses: [] # Additional CSS classes, which will be applied to each form in turn\n    keepFieldValues: \"\" # jQuery selector for fields whose values should be kept when the form is cloned\n    added: null # Function called each time a new form is added\n    removed: null # Function called each time a form is deleted\n\n  return\n) jQuery"]}